---
- import_playbook: inventory.yml


- name: Destroy KVM guests

  hosts: molecule

  become: yes

  vars_files:
    - vars.yml

  tasks:

    - name: Destroy KVM guest
      community.libvirt.virt:
        command: destroy
        name: "{{ guest.installer_hostname }}"
      loop_control:
        loop_var: guest
        label: "{{ guest.installer_hostname }}"
      loop: "{{ guests }}"
      failed_when: false

    - name: Undefine KVM guest
      community.libvirt.virt:
        command: undefine
        name: "{{ guest.installer_hostname }}"
      loop_control:
        loop_var: guest
        label: "{{ guest.installer_hostname }}"
      loop: "{{ guests }}"
      failed_when: false

    - name: Destroy KVM guest disks
      ansible.builtin.file:
        path: "{{ guest_disk }}"
        state: absent
      vars:
        guest_disk: "{{ playbook_dir }}/{{ guest.installer_hostname }}.img"
      loop_control:
        loop_var: guest
        label: "{{ guest.installer_hostname }}"
      loop: "{{ guests }}"

    - name: DNAT SSH preroute
      ansible.builtin.iptables:
        table: nat
        chain: PREROUTING
        destination_port: "{{ (ssh_port_base | int) + (port_offset | int) }}"
        to_destination: "{{ item.installer_interface.ipaddress }}:22"
        jump: DNAT
        protocol: tcp
        state: absent
      loop_control:
        index_var: port_offset
        label: "{{ item.installer_hostname }}"
      loop: "{{ guests }}"

    - name: DNAT SSH output
      ansible.builtin.iptables:
        table: nat
        chain: OUTPUT
        destination_port: "{{ (ssh_port_base | int) + (port_offset | int) }}"
        to_destination: "{{ item.installer_interface.ipaddress }}:22"
        jump: DNAT
        protocol: tcp
        state: absent
      loop_control:
        index_var: port_offset
        label: "{{ item.installer_hostname }}"
      loop: "{{ guests }}"

    - name: Unmasquerade bridge
      ansible.builtin.iptables:
        table: nat
        chain: POSTROUTING
        out_interface: "{{ ansible_default_ipv4.interface }}"
        source: "{{ bridge_net }}"
        destination: 0.0.0.0/0
        jump: MASQUERADE
        protocol: all
        state: present

    - name: Destroy dummy bridge
      ansible.builtin.command: "nmcli con del {{ bridge_name }}"
      failed_when: false

    - name: Destroy dummy interface
      ansible.builtin.command: "ip link del {{ iface_name }}"
      failed_when: false
