---
- name: Configure KVM host
  hosts: localhost
  become: true
  vars_files:
    - vars.yml
  tasks:
    - name: Install package requirements
      ansible.builtin.package:
        name:
          - qemu-kvm
          - qemu-efi
          - libvirt-clients
          - libvirt-daemon-system
          - libvirt-daemon-system-systemd
          - python3-libvirt
      become: true

    - name: Query libvirt pools
      community.libvirt.virt_pool:
        command: list_pools
      register: _pools

    - name: Create libvirt path
      ansible.builtin.file:
        path: "{{ _libvirt_path }}"
        state: directory
        owner: libvirt-qemu
        group: kvm
        mode: 0755
      become: true

    - name: Define libvirt pool
      community.libvirt.virt_pool:
        command: define
        name: "{{ _libvirt_pool }}"
        xml: "{{ lookup('ansible.builtin.template', 'pool.j2.xml') }}"
      vars:
        _pool: "{{ _libvirt_pool }}"
        _path: "{{ _libvirt_path }}"

    - name: Activate libvirt pool
      community.libvirt.virt_pool:
        state: active
        name: "{{ _libvirt_pool }}"

    - name: Add libvirt network
      community.libvirt.virt_net:
        command: define
        name: "{{ _libvirt_network }}"
        xml: "{{ lookup('ansible.builtin.template', 'network.j2.xml') }}"
      vars:
        _network: "{{ _libvirt_network }}"
        _address: "{{ _libvirt_address }}"
        _dhcp: "{{ _libvirt_dhcp }}"
        _net_address: "{{ _address | ansible.utils.ipaddr('1') | ansible.utils.ipaddr('address') }}"
        _net_mask: "{{ _address | ansible.utils.ipaddr('netmask') }}"
        _net_dhcp_start: "{{ _dhcp | ansible.utils.ipaddr('2') | ansible.utils.ipaddr('address') }}"
        _net_dhcp_end: "{{ _dhcp | ansible.utils.ipaddr('-2') | ansible.utils.ipaddr('address') }}"
      when: _libvirt_network != "default"

    - name: Start libvirt network
      community.libvirt.virt_net:
        command: create
        name: "{{ _libvirt_network }}"
      when: _libvirt_network != "default"

    - name: Create KVM keypair
      ansible.builtin.command:
        cmd: "ssh-keygen -t rsa -f {{ molecule_kvm_keypair }} -q -P '' -C ''"
        creates: "{{ molecule_kvm_keypair }}"
      become: false
