---
- name: Add hosts to molecule inventory

  hosts: localhost

  connection: local

  gather_facts: false

  no_log: "{{ molecule_no_log }}"

  vars_files:
    - ./vars.yml

  tasks:

    - name: Add localhost to molecule group
      ansible.builtin.add_host:
        name: localhost
        ansible_user: "{{ lookup('ansible.builtin.env', 'USER') }}"
        ansible_connection: local
        groups:
          - molecule
      when: not (aws_provision | default('no')) | bool

    - name: Create EC2 instance
      when: (aws_provision | default('no')) | bool
      block:

        - name: Query info for existing instances
          community.aws.ec2_instance_info:
            region: "{{ aws_env_region }}"
            filters:
              "tag:ansible_environment": "{{ aws_env_name }}"
              "tag:ansible_project": "{{ aws_project_name }}"
              "instance-state-name": [ "pending", "running" ]
          register: ec2_instance_query

        - name: Initialize instance metadata
          ansible.builtin.set_fact:
            ec2_instance_facts: {}

        - name: Build existing instance metadata
          ansible.builtin.set_fact:
            ec2_instance_facts: "{{ ec2_instance_facts | combine({ item.tags.Name: item}) }}"
          loop_control:
            label: "{{ item.instance_id }}"
          loop: "{{ ec2_instance_query.instances }}"
          when:
            - item.tags is defined
            - item.tags.Name is defined

        - name: Add hosts to inventory
          ansible.builtin.add_host:
            hostname: "{{ item.key }}"
            ansible_user: "{{ item.value.tags.ansible_user }}"
            ansible_host: "{{ item.value.public_ip_address }}"
            ansible_ssh_private_key_file: "{{ molecule_key_pair_path }}"
            instance_id: "{{ item.value.instance_id }}"
            groups:
              - molecule
          loop_control:
            label: "{{ item.key }}"
          loop: "{{ ec2_instance_facts | dict2items }}"
