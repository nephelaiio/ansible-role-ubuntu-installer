---
- import_playbook: inventory.yml


- name: Verify ISO creation

  hosts: molecule

  gather_facts: false

  vars_files:
    - ./vars.yml

  tasks:

    - name: Retrieve guest ISO status
      ansible.builtin.stat:
        path: "{{ cache_dir }}/{{ guest.installer_hostname }}.iso"
      loop_control:
        loop_var: guest
        label: "{{ guest.installer_hostname }}"
      loop: "{{ guests }}"
      register: guest_isos

    - name: Verify ISO creation
      ansible.builtin.fail:
        msg: unable to find iso
      loop_control:
        loop_var: guest_iso
        label: "{{ guest_iso.stat.path | default('unknown') }}"
      loop: "{{ guest_isos.results }}"
      when: not (guest_iso.stat.exists | bool)


- name: Add guests to inventory

  hosts: molecule

  become: true

  vars_files:
    - ./vars.yml

  tasks:

    - name: Add debug ssh key
      ansible.posix.authorized_key:
        user: "{{ ansible_user }}"
        state: present
        key: "{{ debug_pubkey }}"

    - name: Add guest to inventory
      ansible.builtin.add_host:
        name: "{{ guest_hostname }}"
        groups:
          - install
        ansible_user: molecule
        ansible_host: "{{ guest_address }}"
        ansible_port: "{{ guest_port }}"
        ansible_ssh_private_key_file: "{{ kvm_key_pair_path }}"
        partitioning_method: "{{ guest.installer_partitioning_method }}"
        disk_size: "{{ guest.installer_disk_size }}"
      vars:
        guest_hostname: "{{ guest.installer_hostname }}"
        bridge_address: "{{ guest.installer_interface.ipaddress }}"
        snat_address: "{{ ansible_host }}"
        guest_address: "{{ (aws_provision | default('no') | bool) | ternary(snat_address, bridge_address) }}"
        bridge_port: 22
        snat_port: "{{ (ssh_port_base | int) + (port_offset | int) }}"
        guest_port: "{{ (aws_provision | default('no') | bool) | ternary(snat_port, bridge_port) }}"
      loop_control:
        loop_var: guest
        index_var: port_offset
        label: "{{ guest.installer_hostname }}"
      loop: "{{ guests }}"


- name: Verify guests

  hosts: install

  gather_facts: false

  vars_files:
    - ./vars.yml

  tasks:

    - name: Debug connection parameters
      ansible.builtin.debug:
        msg: "ssh {{ ansible_user }}@{{ ansible_host }} {{ ansible_ssh_common_args | default('') }} -i {{ ansible_ssh_private_key_file }} -p {{ ansible_port }}"

    - name: Wait for connection
      ansible.builtin.wait_for_connection:
        sleep: 10
        timeout: 1800

    - name: Gather facts
      ansible.builtin.setup:

    - name: Check passwordless sudo
      ansible.builtin.command: ls /
      become: true

    - name: Gather partition info
      ansible.builtin.shell: "lsblk -l | grep /$"
      register: lsblk_output

    - name: Check static partitioning
      ansible.builtin.fail:
        msg: "expected plain partitioning, found '{{ lsblk_output.stdout }}'"
      when:
        - partitioning_method == 'regular'
        - lsblk_output.stdout is not search("part") or
          lsblk_output.stdout is search("lvm")

    - name: Check lvm partitioning
      when: partitioning_method == 'lvm'
      block:

        - name: Check lvm partitioning
          ansible.builtin.fail:
            msg: "lvm partitioning failed: {{ lsblk_output.stdout }}"
          when:
            - lsblk_output.stdout is not search('lvm')

    - name: Debug disk size
      ansible.builtin.debug:
        msg: "{{ installer_root_device }}"
      vars:
        installer_root_device: "{{ ansible_mounts | selectattr('mount', 'equalto', '/') | list | first }}"

    - name: Check root device size
      ansible.builtin.fail:
        msg: "{{ installer_root_size }} < {{ installer_root_threshold }} ({{ disk_size }})"
      vars:
        installer_root_device: "{{ ansible_mounts | selectattr('mount', 'equalto', '/') | list | first }}"
        installer_root_size: "{{ installer_root_device.size_total }}"
        installer_root_threshold: "{{ (0.85 * (disk_size | int)) | int }}"
      when: (installer_root_size | int) < (installer_root_threshold | int)
