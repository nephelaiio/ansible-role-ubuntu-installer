---
- name: include variable overrides
  include_vars: "{{ lookup('first_found', lookup_files) }}"
  vars:
    lookup_files:
      - "vars/{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
      - "vars/{{ ansible_distribution }}.yml"
      - "vars/{{ ansible_os_family }}.yml"
      - "vars/default.yml"

- name: install packages
  package:
    name: "{{ item }}"
    state: "{{ ubuntu_installer_package_state }}"
  with_items: "{{ ubuntu_installer_packages | default(ubuntu_installer_packages_default) }}"

- name: create temporary target directory
  tempfile:
    state: directory
    prefix: iso
  register: tmpdir_dest

- name: create image target directory
  file:
    state: directory
    path: "{{ ubuntu_installer_target_dir }}"

- name: register source ubuntu url
  set_fact:
    iso_url: "http://releases.ubuntu.com/{{ ubuntu_installer_release }}/ubuntu-{{ ubuntu_installer_release }}-server-amd64.iso"

- name: register source ubuntu iso file
  set_fact:
    iso_path: "{{ ubuntu_installer_target_dir }}/ubuntu.{{ ubuntu_installer_release }}.iso"

- name: fetch ubuntu source iso
  get_url:
    url: "{{ ubuntu_installer_image_url | default(iso_url) }}"
    dest: "{{ iso_path }}"

- name: create temporary mount fstab
  tempfile:
    state: directory
    prefix: fstab
  register: mntfile_dest

- name: create temporary mount directory
  tempfile:
    state: directory
    prefix: mnt
  register: mntdir_dest

- name: mount ubuntu source iso
  mount:
    src: "{{ iso_path }}"
    path: "{{ mntdir_dest.path }}"
    state: mounted
    opts: loop
    fstype: iso9660

- name: extract source iso files
  command: "cp -a {{ mntdir_dest.path }}/. {{ tmpdir_dest.path }}/"
  args:
    warn: no
  tags:
    - skip_ansible_lint

- name: unmount ubuntu source iso
  mount:
    src: "{{ iso_path }}"
    path: "{{ mntdir_dest.path }}"
    state: absent
    opts: loop

- name: remove temporary mount directory
  file:
    path: "{{ mntdir_dest.path }}"
    state: absent

- name: remove temporary mount fstab
  file:
    path: "{{ mntfile_dest.path }}"
    state: absent

- name: validate iso installer type
  fail:
    msg: "{{ ubuntu_installer_type }} must be one of ['debian', 'live']"
  when: ubuntu_installer_type not in ['debian', 'live']

- include_tasks: "{{ ubuntu_installer_type }}.yml"

- name: remove temporary directories
  file:
    path: "{{ tmpdir_dest.path }}"
    state: absent
